{
  "openapi": "3.0.3",
  "info": {
    "title": "Appointmentservice API",
    "description": "Appointmentservice API documentation",
    "contact": {},
    "license": {
      "name": "unlicensed"
    },
    "version": "0.0.1"
  },
  "servers": [
    {
      "url": "https://mlik9ibo58.execute-api.eu-central-1.amazonaws.com/{basePath}",
      "variables": {
        "basePath": {
          "default": "test"
        }
      }
    }
  ],
  "tags": [
    {
      "name": "appointment-resource",
      "description": "Appointment Resource"
    },
    {
      "name": "customer-resource",
      "description": "Customer Resource"
    },
    {
      "name": "service-resource",
      "description": "Service Resource"
    }
  ],
  "paths": {
    "/service/appointment/api/appointments": {
      "get": {
        "tags": [
          "appointment-resource"
        ],
        "summary": "getAllAppointments",
        "operationId": "getAllAppointmentsUsingGET_2",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number of the requested page",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of a page",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "security": [
          {
            "authorizer": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "uri": "http://awseb-AWSEB-12KRI75Q64VS5-480492442.eu-central-1.elb.amazonaws.com/api/appointments",
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": 29000,
          "type": "http_proxy"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppointmentDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "appointment-resource"
        ],
        "summary": "createAppointment",
        "operationId": "createAppointmentUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppointmentDTO"
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "http://awseb-AWSEB-12KRI75Q64VS5-480492442.eu-central-1.elb.amazonaws.com/api/appointments",
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": 29000,
          "type": "http_proxy"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/service/appointment/api/appointments/organization/{organizationId}": {
      "get": {
        "tags": [
          "appointment-resource"
        ],
        "summary": "getAllAppointments",
        "operationId": "getAllAppointmentsUsingGET_1",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "start",
            "in": "query",
            "description": "start",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end",
            "in": "query",
            "description": "end",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "security": [
          {
            "authorizer": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "uri": "http://awseb-AWSEB-12KRI75Q64VS5-480492442.eu-central-1.elb.amazonaws.com/api/appointments/organization/{organizationId}",
          "requestParameters": {
            "integration.request.path.organizationId": "method.request.path.organizationId"
          },
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": 29000,
          "type": "http_proxy"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppointmentDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/service/appointment/api/appointments/organization/{organizationId}/employee/{employeeId}": {
      "get": {
        "tags": [
          "appointment-resource"
        ],
        "summary": "getAllAppointments",
        "operationId": "getAllAppointmentsUsingGET",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "employeeId",
            "in": "path",
            "description": "employeeId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "start",
            "in": "query",
            "description": "start",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end",
            "in": "query",
            "description": "end",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "security": [
          {
            "authorizer": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "uri": "http://awseb-AWSEB-12KRI75Q64VS5-480492442.eu-central-1.elb.amazonaws.com/api/appointments/organization/{organizationId}/employee/{employeeId}",
          "requestParameters": {
            "integration.request.path.organizationId": "method.request.path.organizationId",
            "integration.request.path.employeeId": "method.request.path.employeeId"
          },
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": 29000,
          "type": "http_proxy"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppointmentDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/service/appointment/api/appointments/{id}": {
      "get": {
        "tags": [
          "appointment-resource"
        ],
        "summary": "getAppointment",
        "operationId": "getAppointmentUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "uri": "http://awseb-AWSEB-12KRI75Q64VS5-480492442.eu-central-1.elb.amazonaws.com/api/appointments",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": 29000,
          "type": "http_proxy"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "appointment-resource"
        ],
        "summary": "updateAppointment",
        "operationId": "updateAppointmentUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppointmentDTO"
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "uri": "http://awseb-AWSEB-12KRI75Q64VS5-480492442.eu-central-1.elb.amazonaws.com/api/appointments/{id}",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": 29000,
          "type": "http_proxy"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "appointment-resource"
        ],
        "summary": "deleteAppointment",
        "operationId": "deleteAppointmentUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "uri": "http://awseb-AWSEB-12KRI75Q64VS5-480492442.eu-central-1.elb.amazonaws.com/api/appointments/{id}",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": 29000,
          "type": "http_proxy"
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/service/appointment/api/customers": {
      "get": {
        "tags": [
          "customer-resource"
        ],
        "summary": "getAllCustomers",
        "operationId": "getAllCustomersUsingGET",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number of the requested page",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of a page",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "security": [
          {
            "authorizer": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "uri": "http://awseb-AWSEB-12KRI75Q64VS5-480492442.eu-central-1.elb.amazonaws.com/api/customers",
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": 29000,
          "type": "http_proxy"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "customer-resource"
        ],
        "summary": "createCustomer",
        "operationId": "createCustomerUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerDTO"
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "uri": "http://awseb-AWSEB-12KRI75Q64VS5-480492442.eu-central-1.elb.amazonaws.com/api/customers",
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": 29000,
          "type": "http_proxy"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/service/appointment/api/customers/organization/{id}": {
      "get": {
        "tags": [
          "customer-resource"
        ],
        "summary": "getAllServices",
        "operationId": "getAllServicesUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "authorizer": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "uri": "http://awseb-AWSEB-12KRI75Q64VS5-480492442.eu-central-1.elb.amazonaws.com/api/customers/organization/{id}",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": 29000,
          "type": "http_proxy"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/service/appointment/api/customers/{id}": {
      "get": {
        "tags": [
          "customer-resource"
        ],
        "summary": "getCustomer",
        "operationId": "getCustomerUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "uri": "http://awseb-AWSEB-12KRI75Q64VS5-480492442.eu-central-1.elb.amazonaws.com/api/customers/{id}",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": 29000,
          "type": "http_proxy"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "customer-resource"
        ],
        "summary": "updateCustomer",
        "operationId": "updateCustomerUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerDTO"
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "uri": "http://awseb-AWSEB-12KRI75Q64VS5-480492442.eu-central-1.elb.amazonaws.com/api/customers/{id}",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": 29000,
          "type": "http_proxy"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "customer-resource"
        ],
        "summary": "deleteCustomer",
        "operationId": "deleteCustomerUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "x-amazon-apigateway-integration": {
          "httpMethod": "DELETE",
          "uri": "http://awseb-AWSEB-12KRI75Q64VS5-480492442.eu-central-1.elb.amazonaws.com/api/customers/{id}",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": 29000,
          "type": "http_proxy"
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": [
          "customer-resource"
        ],
        "summary": "partialUpdateCustomer",
        "operationId": "partialUpdateCustomerUsingPATCH",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "x-amazon-apigateway-integration": {
          "httpMethod": "PATCH",
          "uri": "http://awseb-AWSEB-12KRI75Q64VS5-480492442.eu-central-1.elb.amazonaws.com/api/customers/{id}",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": 29000,
          "type": "http_proxy"
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerDTO"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/service/appointment/api/services": {
      "get": {
        "tags": [
          "service-resource"
        ],
        "summary": "getAllServices",
        "operationId": "getAllServicesUsingGET_2",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number of the requested page",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of a page",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "security": [
          {
            "authorizer": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "uri": "http://awseb-AWSEB-12KRI75Q64VS5-480492442.eu-central-1.elb.amazonaws.com/api/customers",
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": 29000,
          "type": "http_proxy"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "service-resource"
        ],
        "summary": "createService",
        "operationId": "createServiceUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceDTO"
              }
            }
          }
        },
        "security": [
          {
            "authorizer": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "http://awseb-AWSEB-12KRI75Q64VS5-480492442.eu-central-1.elb.amazonaws.com/api/services",
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": 29000,
          "type": "http_proxy"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/service/appointment/api/services/organization/{id}": {
      "get": {
        "tags": [
          "service-resource"
        ],
        "summary": "getAllServices",
        "operationId": "getAllServicesUsingGET_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "uri": "http://awseb-AWSEB-12KRI75Q64VS5-480492442.eu-central-1.elb.amazonaws.com/api/services/organization/{id}",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": 29000,
          "type": "http_proxy"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/service/appointment/api/services/{id}": {
      "get": {
        "tags": [
          "service-resource"
        ],
        "summary": "getService",
        "operationId": "getServiceUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "uri": "http://awseb-AWSEB-12KRI75Q64VS5-480492442.eu-central-1.elb.amazonaws.com/api/services/{id}",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": 29000,
          "type": "http_proxy"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "service-resource"
        ],
        "summary": "updateService",
        "operationId": "updateServiceUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceDTO"
              }
            }
          }
        },
        "security": [
          {
            "authorizer": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "uri": "http://awseb-AWSEB-12KRI75Q64VS5-480492442.eu-central-1.elb.amazonaws.com/api/services/{id}",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": 29000,
          "type": "http_proxy"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "service-resource"
        ],
        "summary": "deleteService",
        "operationId": "deleteServiceUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "authorizer": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "httpMethod": "DELETE",
          "uri": "http://awseb-AWSEB-12KRI75Q64VS5-480492442.eu-central-1.elb.amazonaws.com/api/services/{id}",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": 29000,
          "type": "http_proxy"
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": [
          "service-resource"
        ],
        "summary": "partialUpdateService",
        "operationId": "partialUpdateServiceUsingPATCH",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceDTO"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceDTO"
              }
            }
          }
        },
        "security": [
          {
            "authorizer": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "httpMethod": "PATCH",
          "uri": "http://awseb-AWSEB-12KRI75Q64VS5-480492442.eu-central-1.elb.amazonaws.com/api/services/{id}",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": 29000,
          "type": "http_proxy"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "authorizer": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "x-amazon-apigateway-authtype": "custom",
        "x-amazon-apigateway-authorizer": {
          "authorizerUri": "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:245886143564:function:authorizer/invocations",
          "authorizerCredentials": "arn:aws:iam::245886143564:role/api_gateway_auth_invocation",
          "authorizerResultTtlInSeconds": 300,
          "type": "token"
        }
      }
    },
    "schemas": {
      "AppointmentDTO": {
        "title": "AppointmentDTO",
        "required": [
          "employeeId",
          "endAt",
          "organizationId",
          "startAt"
        ],
        "type": "object",
        "properties": {
          "customer": {
            "$ref": "#/components/schemas/CustomerDTO"
          },
          "employeeId": {
            "type": "integer",
            "format": "int64"
          },
          "endAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "organizationId": {
            "type": "integer",
            "format": "int64"
          },
          "service": {
            "$ref": "#/components/schemas/ServiceDTO"
          },
          "startAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CustomerDTO": {
        "title": "CustomerDTO",
        "required": [
          "birthday",
          "firstName",
          "lastName",
          "mail",
          "organizationId",
          "phone"
        ],
        "type": "object",
        "properties": {
          "birthday": {
            "type": "string",
            "format": "date"
          },
          "firstName": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "lastName": {
            "type": "string"
          },
          "mail": {
            "type": "string"
          },
          "organizationId": {
            "type": "integer",
            "format": "int64"
          },
          "phone": {
            "type": "string"
          }
        }
      },
      "ServiceDTO": {
        "title": "ServiceDTO",
        "required": [
          "cost",
          "description",
          "duration",
          "name",
          "organizationId"
        ],
        "type": "object",
        "properties": {
          "cost": {
            "type": "number",
            "format": "double"
          },
          "description": {
            "type": "string"
          },
          "duration": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "organizationId": {
            "type": "integer",
            "format": "int64"
          }
        }
      }
    }
  }
}